name: Deploy to EC2

on:
  push:
    branches:
      - main  # Cambia esto a la rama que desees

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production  # Nombre del entorno configurado

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  # Esto instalará cualquier versión menor de Python 3

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_KEY: ${{ secrets.EC2_KEY }}
      run: |
        echo "$EC2_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST "mkdir -p ~/app && rm -rf ~/app/*"
        scp -o StrictHostKeyChecking=no -i ec2_key.pem -r ./* $EC2_USER@$EC2_HOST:~/app
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST << 'EOF'
          cd ~/app
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          nohup python run.py > nohup.out 2>&1 &
        EOF

    - name: Check server status
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_KEY: ${{ secrets.EC2_KEY }}
      run: |
        echo "$EC2_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST "tail -n 50 ~/app/nohup.out"
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST "tail -n 50 ~/app/nohup.out"